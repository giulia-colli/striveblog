{"ast":null,"code":"import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{useAuth}from\"../contexts/AuthContext\";import{Form,Button,Container,Row,Col,Alert}from\"react-bootstrap\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreatePost=()=>{const[formData,setFormData]=useState({title:\"\",category:\"\",cover:\"\",content:\"\",readTime:{value:\"\",unit:\"minuti\"}});const[coverImage,setCoverImage]=useState(null);const[previewUrl,setPreviewUrl]=useState(\"\");const[error,setError]=useState(\"\");const{user}=useAuth();const navigate=useNavigate();const handleImageChange=e=>{const file=e.target.files[0];if(file){setCoverImage(file);setPreviewUrl(URL.createObjectURL(file));}};const handleSubmit=async e=>{e.preventDefault();try{if(!user||!user._id){setError('Devi essere autenticato per creare un post');return;}if(!coverImage){setError('L\\'immagine di copertina è obbligatoria');return;}const formDataToSend=new FormData();formDataToSend.append('title',formData.title);formDataToSend.append('category',formData.category);formDataToSend.append('content',formData.content);formDataToSend.append('readTime',JSON.stringify({value:parseInt(formData.readTime.value),unit:formData.readTime.unit}));formDataToSend.append('author',user._id);formDataToSend.append('cover',coverImage);const response=await axios.post(\"http://localhost:3100/posts\",formDataToSend,{headers:{'Content-Type':'multipart/form-data'}});if(response.data){navigate(\"/\");}}catch(err){var _err$response,_err$response$data;console.error('Errore:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Errore durante la creazione del post');}};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-center mt-5\",children:/*#__PURE__*/_jsxs(Col,{xs:12,md:6,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Crea un nuovo post\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Titolo\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:formData.title,onChange:e=>setFormData({...formData,title:e.target.value}),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Categoria\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:formData.category,onChange:e=>setFormData({...formData,category:e.target.value}),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Immagine di copertina\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",accept:\"image/*\",onChange:handleImageChange,required:true}),previewUrl&&/*#__PURE__*/_jsx(\"img\",{src:previewUrl,alt:\"Preview\",className:\"mt-2\",style:{maxWidth:'200px'}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Contenuto\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:5,value:formData.content,onChange:e=>setFormData({...formData,content:e.target.value}),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Tempo di lettura\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:8,children:/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:formData.readTime.value,onChange:e=>setFormData({...formData,readTime:{...formData.readTime,value:e.target.value}}),required:true})}),/*#__PURE__*/_jsx(Col,{xs:4})]})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Crea Post\"})]})]})})});};export default CreatePost;","map":{"version":3,"names":["useState","useNavigate","useAuth","Form","Button","Container","Row","Col","Alert","axios","jsx","_jsx","jsxs","_jsxs","CreatePost","formData","setFormData","title","category","cover","content","readTime","value","unit","coverImage","setCoverImage","previewUrl","setPreviewUrl","error","setError","user","navigate","handleImageChange","e","file","target","files","URL","createObjectURL","handleSubmit","preventDefault","_id","formDataToSend","FormData","append","JSON","stringify","parseInt","response","post","headers","data","err","_err$response","_err$response$data","console","message","children","className","xs","md","variant","onSubmit","Group","Label","Control","type","onChange","required","accept","src","alt","style","maxWidth","as","rows"],"sources":["/Users/giuliacolli/Desktop/progetto back/front/src/pages/CreatePost.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Form, Button, Container, Row, Col, Alert } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nconst CreatePost = () => {\r\n    const [formData, setFormData] = useState({\r\n        title: \"\",\r\n        category: \"\",\r\n        cover: \"\",\r\n        content: \"\",\r\n        readTime: {\r\n            value: \"\",\r\n            unit: \"minuti\"\r\n        }\r\n    });\r\n\r\n    const [coverImage, setCoverImage] = useState(null);\r\n    const [previewUrl, setPreviewUrl] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const { user } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setCoverImage(file);\r\n            setPreviewUrl(URL.createObjectURL(file));\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (!user || !user._id) {\r\n                setError('Devi essere autenticato per creare un post');\r\n                return;\r\n            }\r\n\r\n            if (!coverImage) {\r\n                setError('L\\'immagine di copertina è obbligatoria');\r\n                return;\r\n            }\r\n\r\n            const formDataToSend = new FormData();\r\n            formDataToSend.append('title', formData.title);\r\n            formDataToSend.append('category', formData.category);\r\n            formDataToSend.append('content', formData.content);\r\n            formDataToSend.append('readTime', JSON.stringify({\r\n                value: parseInt(formData.readTime.value),\r\n                unit: formData.readTime.unit\r\n            }));\r\n            formDataToSend.append('author', user._id);\r\n            formDataToSend.append('cover', coverImage);\r\n\r\n            const response = await axios.post(\r\n                \"http://localhost:3100/posts\",\r\n                formDataToSend,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (response.data) {\r\n                navigate(\"/\");\r\n            }\r\n        } catch (err) {\r\n            console.error('Errore:', err);\r\n            setError(err.response?.data?.message || 'Errore durante la creazione del post');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-center mt-5\">\r\n                <Col xs={12} md={6}>\r\n                    <h1>Crea un nuovo post</h1>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Titolo</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={formData.title}\r\n                                onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Categoria</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={formData.category}\r\n                                onChange={(e) => setFormData({ ...formData, category: e.target.value })}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Immagine di copertina</Form.Label>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleImageChange}\r\n                                required\r\n                            />\r\n                            {previewUrl && (\r\n                                <img\r\n                                    src={previewUrl}\r\n                                    alt=\"Preview\"\r\n                                    className=\"mt-2\"\r\n                                    style={{ maxWidth: '200px' }}\r\n                                />\r\n                            )}\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Contenuto</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={5}\r\n                                value={formData.content}\r\n                                onChange={(e) => setFormData({ ...formData, content: e.target.value })}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Tempo di lettura</Form.Label>\r\n                            <Row>\r\n                                <Col xs={8}>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        value={formData.readTime.value}\r\n                                        onChange={(e) => setFormData({ ...formData, readTime: { ...formData.readTime, value: e.target.value } })}\r\n                                        required\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={4}>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Crea Post\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default CreatePost; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}